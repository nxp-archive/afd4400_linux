#ifndef SERDES_PRIV_H_	/* prevent circular inclusion */
#define SERDES_PRIV_H_	/* by using protection macros */
/*
 * serdes-priv.h
 *
 * Author: Anil Jaiswal b44339@freescale.com
 *
 * Copyright 2013 Freescale Semiconductor, Inc.
 *
 * This program is free software; you can redistribute  it and/or modify it
 * under  the terms of  the GNU General  Public License as published by the
 * Free Software Foundation;  either version 2 of the  License, or (at your
 * option) any later version.
 */
/* Group/PLL Configuration Control and Status Registers
 * SRDS Reset Control Register (SRDSxPLLnRSTCTL)
 */
#define SRDS_PLL_RSTCTL_RSTREQ_BIT	31
#define SRDS_PLL_RSTCTL_RSTREQ_MASK	(1 << SRDS_PLL_RSTCTL_RSTREQ_BIT)
#define SRDS_PLL_RSTCTL_RST_DONE_BIT	30
#define SRDS_PLL_RSTCTL_RST_DONE_MASK	(1 << SRDS_PLL_RSTCTL_RST_DONE_BIT)
#define SRDS_PLL_RSTCTL_RST_ERR_BIT	29
#define SRDS_PLL_RSTCTL_RST_ERR_MASK	(1 << SRDS_PLL_RSTCTL_RST_ERR_BIT)
#define SRDS_PLL_RSTCTL_PLLRST_B_BIT	7
#define SRDS_PLL_RSTCTL_PLLRST_B_MASK	(1 << SRDS_PLL_RSTCTL_PLLRST_B_BIT)
#define SRDS_PLL_RSTCTL_SRDST_B_BIT	6
#define SRDS_PLL_RSTCTL_SRDST_B_MASK	(1 << SRDS_PLL_RSTCTL_SRDST_B_BIT)
#define SRDS_PLL_RSTCTL_SDEN_BIT	5
#define SRDS_PLL_RSTCTL_SDEN_MASK	(1 << SRDS_PLL_RSTCTL_SDEN_BIT)

/* SRDSx PLL Control Register 0 (SRDSxPLLnCR0) */
#define SRDS_PLLCR_POFF_BIT		31
#define SRDS_PLLCR_POFF_MASK		(0x1 << SRDS_PLLCR_POFF_BIT)
#define SRDS_PLLCR_RFCLK_SEL_BITS	(0x7 << 28) /* 3 bits */
#define SRDS_PLLCR_RFCLK_100		0x0
#define SRDS_PLLCR_RFCLK_122_88		(0x1 << 28)
#define SRDS_PLLCR_RFCLK_156		(0x2 << 28)
#define SRDS_PLLCR_RFCLK_EN_BIT		27
#define SRDS_PLLCR_RFCLK_EN_MASK	(0x1 << SRDS_PLLCR_RFCLK_EN_BIT)
#define SRDS_PLLCR_PLL_LCK_BIT		23
#define SRDS_PLLCR_PLL_LCK_MASK		(0x1 << SRDS_PLLCR_PLL_LCK_BIT)
#define SRDS_PLLCR_FRATE_SEL_BITS	0x0F
#define SRDS_PLLCR_FRATE_SEL_MASK	(SRDS_PLLCR_FRATE_SEL_BITS << 16)
#define SRDS_PLLCR_DLYDIV_SEL_MASK	(0xF << 16)
#define FREQ_MULTIPLE_5_00_GHZ		(0x0 << 16)
#define FREQ_MULTIPLE_4_912_GHZ		(0x3 << 16)
#define FREQ_MULTIPLE_3_072_GHZ		(0xC << 16)

/* SRDSx PLL Control Register 1 (SRDSxPLLnCR1) */
#define SRDS_PLLCR_PLLBW_SEL_BIT	27
#define SRDS_PLLCR_PLLBW_SEL_MASK	(0x1 << SRDS_PLLCR_PLLBW_SEL_BIT)
#define SRDS_PLLCR_VCO_EN_BIT		21
#define SRDS_PLLCR_VCO_EN_MASK		(0x1 << SRDS_PLLCR_VCO_EN_BIT)
#define SRDS_PLLCR_VCO_LC		0x0
#define SRDS_PLLCR_VCO_RING		(0x1 << SRDS_PLLCR_VCO_EN_BIT)

/* SRDSx PLL Control Register 4 (SRDSxPLLnCR4) */
#define SRDS_PLLCR_RCLKEN_BIT		27
#define SRDS_PLLCR_RCLKEN_MASK		(0x1 << SRDS_PLLCR_RCLKEN_BIT)
#define SRDS_PLLCR_LANE_MASK			0x7

/* SerDes General Control and Status Registers
 * SRDSx Transmit Calibration Control Register (SRDSxTCALCR)
 */
#define SRDS_TX_CALIB_CTRL_BIT		27
#define SRDS_TX_CALIB_CTRL_MASK		(0x1 << SRDS_TX_CALIB_CTRL_BIT)

/* SRDSx Receive Calibration Control Register (SRDSxRCALCR) */
#define SRDS_RX_CALIB_CTRL_BIT		27
#define SRDS_RX_CALIB_CTRL_MASK		(0x1 << SRDS_RX_CALIB_CTRL_REG_BIT)

/* SRDSx General Register 0 (SRDSxGR0) */
#define SRDS_GENRAL_XPAD_SEL_BIT	14
#define SRDS_GENRAL_XPAD_SEL_MASK	(0x1 << SRDS_GENRAL_XPAD_SEL_BIT)

/* Protocol Configuration Control and Status Registers
 * SRDSx Protocol Configuration Register 1 (SRDSxPCCR1)
 */
#define SRDS_GRP_PROT_SGMIIA_CFG_BITS	0x3
#define SRDS_GRP_PROT_SGMIIA_CFG_MASK	(0x3 << 30)
#define SRDS_GRP_PROT_SGMIIB_CFG_BITS	0x3
#define SRDS_GRP_PROT_SGMIIB_CFG_MASK	(0x3 << 28)
#define SRDS_GRP_PROT_SGMIIA_ENABLE	(0x1 << 30)
#define SRDS_GRP_PROT_SGMIIB_ENABLE	(0x1 << 28)

/* SRDSx Protocol Configuration Register 3 (SRDSxPCCR3) */
#define SRDS_GRP_PROT_CPRIG4_CFG_BITS		0xF
#define SRDS_GRP_PROT_CPRIG4_CFG_MASK		(0xF << 16)
#define SRDS_GRP_PROT_CPRIG4_SINGLE_CHANNEL	(0X2 << 16)
#define SRDS_GRP_PROT_CPRIG6_CFG_BITS		0xF
#define SRDS_GRP_PROT_CPRIG6_CFG_MASK		(0xF << 8)

/* SRDSx Protocol Configuration Register 5 (SRDSxPCCR5) */
#define SRDS_GRP_PROT_JESDG1_CFG_BITS		0XF
#define SRDS_GRP_PROT_JESDG1_CFG_MASK		(0XF << 28)
#define SRDS_GRP_PROT_JESDG1_SINGLE_CHANNEL	(0X1 << 28)
#define SRDS_GRP_PROT_JESDG2_CFG_BITS		0XF
#define SRDS_GRP_PROT_JESDG2_CFG_MASK		(0XF << 24)
#define SRDS_GRP_PROT_JESDG2_DOUBLE_CHANNEL	(0X2 << 24)
#define SRDS_GRP_PROT_JESDG3_CFG_BITS		0XF
#define SRDS_GRP_PROT_JESDG3_CFG_MASK		(0XF << 20)
#define SRDS_GRP_PROT_JESDG4_CFG_BITS		0XF
#define SRDS_GRP_PROT_JESDG4_CFG_MASK		(0XF << 16)
#define SRDS_GRP_PROT_JESDG5_CFG_BITS		0XF
#define SRDS_GRP_PROT_JESDG5_CFG_MASK		(0XF << 12)
#define SRDS_GRP_PROT_JESDG6_CFG_BITS		0XF
#define SRDS_GRP_PROT_JESDG6_CFG_MASK		(0XF << 8)
#define SRDS_GRP_PROT_JESDG7_CFG_BITS		0XF
#define SRDS_GRP_PROT_JESDG7_CFG_MASK		(0XF << 4)
#define SRDS_GRP_PROT_JESDG8_CFG_BITS		0XF
#define SRDS_GRP_PROT_JESDG8_CFG_MASK		(0XF << 0)

/* SRDSx Lane m Protocol Select Status Register 0
 *  (SRDSxLNmPSSR0)(RD ONLY REGs)
 */
#define SRDS_LN_PSS_PSSTYPE_BITS	(0x3F << 24)
#define SRDS_LN_PSS_CNTRL_BIT		20
#define SRDS_LN_PSS_CNTRL_MASK		(0x1 << SRDS_LN_PSS_CNTRL_BIT)
#define SRDS_LN_PSS_MAC_BITS		0x7
#define SRDS_LN_PSS_MAC_MASK		(0x7 << 16)
#define SRDS_LN_PSS_PCS_BITS		0x7
#define SRDS_LN_PSS_PCS_MASK		(0x7 << 8)
#define SRDS_LN_PSS_LN_BITS		0x7
#define SRDS_LN_PSS_LN_MASK		(0xF << 0)

/* CPRI Protocol Control Registers
 * CPRIn Protocol Control Register 0 (SRDSxCPRInCR0)
 */
#define SRDS_CPRI_A_PROTO_CTRL_REG0		0x580
#define SRDS_CPRI_B_PROTO_CTRL_REG0		0x588
#define SRDS_CPRI_C_PROTO_CTRL_REG0		0x590
#define SRDS_CPRI_D_PROTO_CTRL_REG0		0x598
#define SRDS_CPRI_E_PROTO_CTRL_REG0		0x5a0
#define SRDS_CPRI_F_PROTO_CTRL_REG0		0x5a8
#define SRDS_CPRI_G_PROTO_CTRL_REG0		0x5b0
#define SRDS_CPRI_H_PROTO_CTRL_REG0		0x5b8
#define SRDS_CPRI_PROTO_CTRL_RX_DLY_BITS	0xFFFF
#define SRDS_CPRI_PROTO_CTRL_RX_DLY_MASK	0xFFFF

/* CPRIn Protocol Control Register 1 (SRDSxCPRInCR1) */
#define SRDS_CPRI_A_PROTO_CTRL_REG1		0x584
#define SRDS_CPRI_B_PROTO_CTRL_REG1		0x58c
#define SRDS_CPRI_C_PROTO_CTRL_REG1		0x594
#define SRDS_CPRI_D_PROTO_CTRL_REG1		0x59c
#define SRDS_CPRI_E_PROTO_CTRL_REG1		0x5a4
#define SRDS_CPRI_F_PROTO_CTRL_REG1		0x5ac
#define SRDS_CPRI_G_PROTO_CTRL_REG1		0x5b4
#define SRDS_CPRI_H_PROTO_CTRL_REG1		0x5bc
#define SRDS_CPRI_PROTO_CTRL_TX_DLY		0xFFFF
#define SRDS_CPRI_PROTO_CTRL_TX_DLY_MASK	0xFFFF

/* Per-Lane Control and Status Registers
 * Per-lane SerDes Control/Status Registers
 * SRDSx Lane m General Control Register 0 (SRDSxLNmGCR0)
 */
#define SRDS_LN_GCR_RPLL_LES		31
#define SRDS_LN_GCR_RPLL_LES_MASK	(0x1 << SRDS_LN_GCR_RPLL_LES)
#define SRDS_LN_GCR_RRAT_SEL		28
#define SRDS_LN_GCR_TPLL_LES		27
#define SRDS_LN_GCR_TPLL_LES_MASK	(0x1 << SRDS_LN_GCR_TPLL_LES)
#define SRDS_LN_GCR_TRAT_SEL		24
#define SRDS_LN_GCR_RRST_B		22
#define SRDS_LN_GCR_RRST_B_MASK		(0x1 << SRDS_LN_GCR_RRST_B)
#define SRDS_LN_GCR_TRST_B		21
#define SRDS_LN_GCR_TRST_B_MASK		(0x1 << SRDS_LN_GCR_TRST_B)
#define SRDS_LN_GCR_RX_PD		20
#define SRDS_LN_GCR_RX_PD_MASK		(0x1 << SRDS_LN_GCR_RX_PD)
#define SRDS_LN_GCR_TX_PD		19
#define SRDS_LN_GCR_TX_PD_MASK		(0x1 << SRDS_LN_GCR_TX_PD)
#define SRDS_LN_GCR_IF20BIT_EN		18
#define SRDS_LN_GCR_IF20BIT_EN_MASK	(0x1 << SRDS_LN_GCR_IF20BIT_EN)
#define SRDS_LN_GCR_IACC_DIS		17
#define SRDS_LN_GCR_IACC_DIS_MASK	(0x1 << SRDS_LN_GCR_IACC_DIS)
#define SRDS_LN_GCR_FIRST_LN		16
#define SRDS_LN_GCR_FIRST_LN_MASK	(0x1 << SRDS_LN_GCR_FIRST_LN)
#define SRDS_LN_GCR_PROTS		0x1F
#define SRDS_LN_GCR_PROTS_SEL		7
#define SRDS_LN_GCR_PROTS_AMSK		(0x1F << 7)
#define SRDS_LN_PROTS_SGMII_BITS	0x1
#define SRDS_LN_PROTS_XFI_BITS		0xA
#define SRDS_LN_PROTS_CPRI_BITS		0xB
#define SRDS_LN_PROTS_JESD204_BITS	0xC

/* SRDSx Lane m General Control Register 1 (SRDSxLNmGCR1) */
#define SRDS_LN_GCR_RDAT_INV		31
#define SRDS_LN_GCR_RDAT_INV_MASK	(0x1 << SRDS_LN_GCR_RDAT_INV)
#define SRDS_LN_GCR_TDAT_INV		30
#define SRDS_LN_GCR_TDAT_INV_MASK	(0x1 << SRDS_LN_GCR_TDAT_INV)
#define SRDS_LN_GCR_REIDL_TH		(0x7 << 20)
#define SRDS_LN_GCR_REIDL_TH_MASK	(0x7 << 20)
#define SRDS_LN_GCR_REIDL_EX_SEL	(0xC << 18)
#define SRDS_LN_GCR_REIDL_EX_SEL_MASK	(0xC << 18)
#define SRDS_LN_GCR_REIDL_ET_SEL	(0x3 << 16)
#define SRDS_LN_GCR_REIDL_ET_SEL_MASK	(0x3 << 16)
#define SRDS_LN_GCR_REIDL_EX_MSB	15
#define SRDS_LN_GCR_REIDL_EX_MSB_MASK	(0x1 << SRDS_LN_GCR_REIDL_EX_MSB)
#define SRDS_LN_GCR_REIDL_ET_MSB	14
#define SRDS_LN_GCR_REIDL_ET_MSB_MASK	(0x1 << SRDS_LN_GCR_REIDL_ET_MSB)
#define SRDS_LN_GCR_TRSTDIR		7
#define SRDS_LN_GCR_TRSTDIR_MASK	(0x1 << SRDS_LN_GCR_TRSTDIR)
#define SRDS_LN_GCR_ISLEW_RCTL		(0x3 << 4)
#define SRDS_LN_GCR_ISLEW_RCTL_MASK	(0x3 << 4)
#define SRDS_LN_GCR_OSLEW_RCTL		(0x3 << 0)
#define SRDS_LN_GCR_OSLEW_RCTL_MASK	(0x3 << 0)

/* SRDSx Lane m Receive Equalization Control Register 0 (SRDSxLNmRECR0) */
#define SRDS_LN_RXEQCR_GK2OVD_BITS	(0x0F << 24)
#define SRDS_LN_RXEQCR_GK3OVD_BITS	(0x0F << 16)
#define SRDS_LN_RXEQCR_GK2OVD_EN_BIT	15
#define SRDS_LN_RXEQCR_GK2OVD_EN_MASK	(0x1 << SRDS_LN_RXEQCR_GK2OVD_EN_BIT)
#define SRDS_LN_RXEQCR_GK3OVD_EN_BIT	14
#define SRDS_LN_RXEQCR_GK3OVD_EN_MASK	(0x1 << SRDS_LN_RXEQCR_GK3OVD_EN_BIT)
#define SRDS_LN_RXEQCR_OSETOVD_BIT	13
#define SRDS_LN_RXEQCR_OSETOVD_MASK	(0x1 << SRDS_LN_RXEQCR_OSETOVD_BIT)
#define SRDS_LN_RXEQCR_BASE_WAND_BITS	(0x3 << 10)
#define SRDS_LN_RXEQCR_OSETOVD_BITS	(0x3G << 0)

/* SRDSx Lane m Receiver Equalization Control Register 1
 * SRDSxLNmRECR1 */
#define SRDS_LN_RXEQCR_BSNP_DN_BIT	0
#define SRDS_LN_RXEQCR_BSNP_DN_MASK	(0x1 << SRDS_LN_RXEQCR_BSNP_DN_BIT)
#define SRDS_LN_RXEQCR_CSNP_DN_BIT	1
#define SRDS_LN_RXEQCR_CSNP_DN_MASK	(0x1 << SRDS_LN_RXEQCR_CSNP_DN_BIT)
#define SRDS_LN_RXEQCR_CDR_SNP_DN_BIT	2
#define SRDS_LN_RXEQCR_CDR_SNP_DN_MASK	(0x1 << SRDS_LN_RXEQCR_CDR_SNP_DN_BIT)

/* SRDSx Lane m Transmit Equalization Control Register 0 (SRDSxLNmTECR0)*/
#define SRDS_LN_TXEQCR_TEQ_TYPE_BITS	(0x3 << 29)
#define SRDS_LN_TXEQCR_SGN_PREQ_BIT	26
#define SRDS_LN_TXEQCR_SGN_PREQ_MASK	(0x1 << SRDS_LN_TXEQCR_SGN_PREQ_BIT)
#define SRDS_LN_TXEQCR_RATIO_PREQ_BITS	(0xF << 22)
#define SRDS_LN_TXEQCR_SGN_POST1Q_BIT	21
#define SRDS_LN_TXEQCR_SGN_POST1Q_MASK	(0x1 << SRDS_LN_TXEQCR_SGN_POST1Q_BIT)
#define SRDS_LN_TXEQCR_RATIO_PST1Q_BITS	(0x1F << 16)
#define SRDS_LN_TXEQCR_ADPT_EQ_BITS	(0x3F << 8)
#define SRDS_LN_TXEQCR_AMP_RED_BITS	(0x1F << 0)

/* Transition Tracking Loop Control Register 0 (SRDSxLNmTTLCR0) */
#define SRDS_LN_7_TTLCR_FLT_SEL_BITS	(0x3F << 24)

/* Transition Tracking Loop Control Register 1 (SRDSxLNmTTLCR1) */
#define SRDS_LN_TTLCR_DIV_RCVCLK_BIT	0x7
#define SRDS_LN_TTLCR_DIV40_RCVCLK_BIT	0x6
#define SRDS_LN_TTLCR_DIV25_RCVCLK_BIT	0x3

/* SRDS  Lane m Test Control/Status Register 3 (SRDSxLNmTCSR3) */
#define SRDS_LN_TCS_LOOPBACK_BIT		28
#define SRDS_LOOPBACK_EN			(0x3 << 28)
#define SRDS_LN_TEST_CTRL_STATUS_CDR_LCK_BIT	27
#define SRDS_LN_TEST_CTRL_STATUS_CDR_LCK_MASK	\
	(1 << SRDS_LN_TEST_CTRL_STATUS_CDR_LCK_BIT)

#define SRDS_PLL_TIMEOUT_MS	100

#endif
